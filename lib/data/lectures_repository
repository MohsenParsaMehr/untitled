import 'dart:convert';
import 'dart:developer';
import 'package:http/http.dart';
import 'package:untitled/data/simple_request.dart';
import 'package:untitled/network/envelope.dart';
import 'package:untitled/data/APILecturesQuery.dart';
import 'package:untitled/utilities/constants.dart';
const String apiKey = '<Your Key>';
const String apiId = '<your ID>';
//const String apiUrl = 'localhost:44358';// /qa/GetAllQAs';

class LecturesRepository {
static int serviceRequestCounter = 0;
  Future<List<APILecturesQuery>> getData(String url) async {
    List<APILecturesQuery> lectures = [];
    try {
      var headers = {
        "Access-Control-Allow-Origin": "*",
        'Content-Type': 'application/json',
        'Accept': '*/*'
      };
      //final response = await get(Uri.https(url,'lecture/GetAllLectures'),headers: headers);
      SimpleRequest simpleRequest = SimpleRequest(-1, "fa-IR");
      Envelope<SimpleRequest> qaEnvelope = Envelope(simpleRequest, null, null, ++serviceRequestCounter, null, false, false, false, false, false, false, '');
      final postResponse = await post(Uri.https(Constants.baseUrl,'lecture/GetLectures'),
        headers: headers,
        body: jsonEncode(qaEnvelope.ToJson((data) => simpleRequest.toJson(data)) ,));
      /// sample of envelope
      ///Envelope<User> userInfoEnvelope = new Envelope<>(user,null, null, this, ++serviceRequestCounter, null, false, true, true, true, false, true);
      ///    asyncNetworking = new AsyncNetworking(this, this, USER_SIGNUP_TASK, true, userInfoEnvelope, Integer.class);

      if (postResponse.statusCode == 200) {
        var qaData = jsonDecode(postResponse.body);
        for (int i = 0; i < qaData.length; i++) {
          lectures.add(APILecturesQuery.fromJson(qaData[i]));
        }
      } else {
        log(postResponse.body);
      }

    }
    catch (e) {
      print(e);
    }
    return lectures;
  }
}